- name: Add user "{{ adduser_user_name }}"
  user:
    name: "{{ adduser_user_name }}"
    password: "{{ adduser_password }}"
    update_password: "{{ adduser_password_update }}"
    comment: "{{ adduser_user_comments }}"
    shell: "{{ adduser_shell | default('/bin/bash') }}"
    expires: "{{ adduser_expires }}"
  become: yes

- name: check home has correct permissions
  file:
    dest: "{{ adduser_user_home }}"
    owner: "{{ adduser_user_name }}"
    mode: "{{ adduser_user_home_perms }}"
    state: directory
  become: yes

- debug: var=adduser_public_keys
- name: Add authorized keys for {{ adduser_user_name }} user
  authorized_key:
    user: "{{ adduser_user_name }}"
    key: "{{ item }}"
  with_file: "{{ adduser_public_keys }}"
  when: adduser_public_keys is defined and adduser_public_keys != "" and adduser_sshkey_options is not defined
  become: yes
- name: Add authorized keys for {{ adduser_user_name }} user - key_options
  authorized_key:
    user: "{{ adduser_user_name }}"
    key: "{{ item }}"
    key_options: "{{ adduser_sshkey_options }}"
  with_file: "{{ adduser_public_keys }}"
  when: adduser_public_keys is defined and adduser_public_keys != "" and adduser_sshkey_options is defined
  become: yes

- name: SSH authorized_keys {{ adduser_user_name }}
  file:
    dest={{ adduser_user_home }}/.ssh owner={{ adduser_user_name }} mode=700 state=directory
  become: yes

- stat: path=/etc/sudoers
  register: sudoers
- block:
    - set_fact:
        final_groups: "{{ adduser_groups }} + [ 'admin' ]"
      when: ansible_os_family == "Debian"
    - set_fact:
        final_groups: "{{ adduser_groups }} + [ 'wheel' ]"
      when: ansible_os_family == "RedHat"
    - name: add user directly in sudoers if no defined admin group
      lineinfile:
        dest: /etc/sudoers
        regexp: "^{{ adduser_user_name }} ALL"
        line: "{{ adduser_user_name }} ALL=(ALL) ALL"
        state: present
        become: yes
        backup: yes
        validate: 'visudo -cf %s'
      when: not (ansible_os_family == "Debian" or ansible_os_family == "RedHat")
  when: adduser_sudoroot is defined and adduser_sudoroot and sudoers.stat.exists

